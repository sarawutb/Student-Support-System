@using StudentSupportSystem.Model;
@using StudentSupportSystem.ViewModel;

@page "/login"
@attribute [AllowAnonymous]

<div class="container-fluid">
    <div class="row">
        <div class="col-5" style="
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);">
            <div class="authincation-content">
                <div class="row no-gutters">
                    <div class="col-xl-12">
                        <div class="auth-form mx-5 mt-3">
                            <h2 class="text-center mb-4">@ResourceSystemMessenger.StudentSupportSystem</h2>
                            <div class="form-group">
                                <label class="card-title">อีเมล</label>
                                <input type="email" class="form-control" @bind="_viewModel.Email">
                            </div>
                            <div class="form-group">
                                <label class="card-title">รหัสผ่าน</label>
                                <input type="password" class="form-control" @bind="_viewModel.Password">
                            </div>
                            <div class="text-center">
                                <button type="button" class="btn btn-primary btn-block" @onclick="() => _viewModel.OnLogin()">เข้าสู่ระบบ</button>
                            </div>
                            <div class="new-account mt-4 text-center">
                                <p>Version 1.0.0</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@inject IJSRuntime JSRuntime
@inject LoginViewModel _viewModel;
@code {
    protected override async Task OnInitializedAsync()
    {
        _viewModel.PropertyChanged += (sender, args) =>
                {
                    InvokeAsync(StateHasChanged);
                };

        await _viewModel.IsSignIn();
    }
}
