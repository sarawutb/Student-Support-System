@using StudentSupportSystem.Pages.Component
@using StudentSupportSystem.ViewModel;
@using StudentSupportSystem.Model;

<button type="button" class="btn btn-primary" data-toggle="modal" data-target=".@_viewModel.ModalName"><i class="fa fa-plus"></i> @ResourceSystemMessenger.AddCommitCrime</button>
<div class="modal fade @_viewModel.ModalName" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg" id="@_viewModel.ModalId">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">@ResourceSystemMessenger.StudentsWhoViolateDisciplineBehaveImproperly</h3>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <ComponentModalTitleCommitCrimeStd StudentProfile="@StudentProfile" />
                <div class="form-row">
                    <div class="form-group col-md-offset-12">
                        <label class="card-title">จำนวนครั้ง</label>
                        <input id="unit-test" type="number" class="form-control text-lg-center" @bind-value="_viewModel.Qty" />
                    </div>
                </div>
                <div class="form-row">
                    @for (var index = 0; index < _viewModel.LstBreachDisciplineMst.Count; index++)
                    {
                        <div class="form-group col-md-4">

                            @for (var row = 1; row <= 3; row++)
                            {
                                var idCheck = $"check{index}{row}";
                                var itemId = _viewModel.LstBreachDisciplineMst[index].Id;
                                <div class="form-check mb-2">
                                    <input type="checkbox"
                                           class="form-check-input @_viewModel.UnCheckBoxModalAddCommitCrimeStd"
                                           id="@idCheck"
                                           value="@itemId"
                                           @onchange="(e) => _viewModel.UpdateSelectedCheckListId(itemId, e.Value)" />
                                    <label class="form-check-label" for="@idCheck">
                                        <b class="card-title">@_viewModel.LstBreachDisciplineMst[index].Name</b>
                                    </label>
                                </div>
                                index++;
                            }
                        </div>
                    }
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">@ResourceSystemMessenger.Close</button>
                <button type="button" class="btn btn-primary" @onclick="() => _viewModel.AddBreachDisciplineMasterCheckList(IdStudentSupportMaster)">@ResourceSystemMessenger.Save</button>
            </div>
        </div>
    </div>
</div>
@inject ModalAddCommitCrimeStdViewModel _viewModel;
@code {
    protected override void OnInitialized()
    {
        _viewModel.PropertyChanged += (sender, args) =>
        {
            InvokeAsync(StateHasChanged);
        };
        base.OnInitialized();
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await _viewModel.GetBreachDisciplineMst();
    }

    [Parameter]
    public StudentModel? StudentProfile { get; set; }

    [Parameter]
    public int IdStudentSupportMaster { get; set; }

}
